{"version":3,"sources":["jquery.js"],"names":["window","$","jQuery","selectorOrArray","elements","document","querySelectorAll","Array","api","Object","create","prototype","assign","oldThis","constructor","addClass","className","i","length","classList","add","find","selector","array","elements2","from","concat","end","each","fn","call","print","console","log","parent","node","indexOf","parentNode","push","children","siblings","filter","n","next","nextNode","nextSibling","nodeType","prev","prevNode","previousSibling"],"mappings":";;;;;;;;;;;;AAAAA,MAAM,CAACC,CAAP,GAAWD,MAAM,CAACE,MAAP,GAAgB,UAAUC,eAAV,EAA2B;AACpD,MAAIC,QAAQ,GAAG,IAAf;;AACA,MAAI,OAAOD,eAAP,KAA2B,QAA/B,EAAyC;AACvCC,IAAAA,QAAQ,GAAGC,QAAQ,CAACC,gBAAT,CAA0BH,eAA1B,CAAX;AACD,GAFD,MAEO,IAAIA,eAAe,YAAYI,KAA/B,EAAsC;AAC3CH,IAAAA,QAAQ,GAAGD,eAAX;AACD;;AAED,MAAMK,GAAG,GAAGC,MAAM,CAACC,MAAP,CAAcR,MAAM,CAACS,SAArB,CAAZ,CARoD,CAQR;AAC5C;AACA;;AACAF,EAAAA,MAAM,CAACG,MAAP,CAAcJ,GAAd,EAAmB;AACjBJ,IAAAA,QAAQ,EAAEA,QADO;AAEjB;AACA;AACAS,IAAAA,OAAO,EAAEV,eAAe,CAACU;AAJR,GAAnB;AAQA,SAAOL,GAAP;AACD,CApBD,EAqBA;AACA;;;AACAN,MAAM,CAACS,SAAP,GAAmB;AACjBG,EAAAA,WAAW,EAAEZ,MADI;AAEjBa,EAAAA,QAFiB,oBAERC,SAFQ,EAEG;AAClB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKb,QAAL,CAAcc,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC7C,WAAKb,QAAL,CAAca,CAAd,EAAiBE,SAAjB,CAA2BC,GAA3B,CAA+BJ,SAA/B;AACD,KAHiB,CAIlB;;;AACA,WAAO,IAAP;AACD,GARgB;AASjBK,EAAAA,IATiB,gBASZC,QATY,EASF;AACb,QAAIC,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKb,QAAL,CAAcc,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC7C,UAAMO,SAAS,GAAGjB,KAAK,CAACkB,IAAN,CAAW,KAAKrB,QAAL,CAAca,CAAd,EAC1BX,gBAD0B,CACTgB,QADS,CAAX,CAAlB;AAEAC,MAAAA,KAAK,GAAGA,KAAK,CAACG,MAAN,CAAaF,SAAb,CAAR;AACD,KANY,CAOb;;;AACAD,IAAAA,KAAK,CAACV,OAAN,GAAgB,IAAhB,CARa,CASb;AACA;;AACA,WAAOX,MAAM,CAACqB,KAAD,CAAb;AACD,GArBgB;AAsBjBI,EAAAA,GAtBiB,iBAsBX;AACJ,WAAO,KAAKd,OAAZ;AACD,GAxBgB;AAyBjBe,EAAAA,IAzBiB,gBAyBZC,EAzBY,EAyBR;AACP,SAAK,IAAIZ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKb,QAAL,CAAcc,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC7CY,MAAAA,EAAE,CAACC,IAAH,CAAQ,IAAR,EAAc,KAAK1B,QAAL,CAAca,CAAd,CAAd,EAAgCA,CAAhC;AACD,KAHM,CAIP;;;AACA,WAAO,IAAP;AACD,GA/BgB;AAgCjBc,EAAAA,KAhCiB,mBAgCT;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK7B,QAAjB;AACD,GAlCgB;AAmCjB8B,EAAAA,MAnCiB,oBAmCR;AACP,QAAMX,KAAK,GAAG,EAAd,CADO,CAEP;;AACA,SAAKK,IAAL,CAAU,UAACO,IAAD,EAAU;AAClB;AACA;AACA,UAAIZ,KAAK,CAACa,OAAN,CAAcD,IAAI,CAACE,UAAnB,MAAmC,CAAC,CAAxC,EAA2C;AACzCd,QAAAA,KAAK,CAACe,IAAN,CAAWH,IAAI,CAACE,UAAhB;AACD;AACF,KAND,EAHO,CAUP;;AACA,WAAOnC,MAAM,CAACqB,KAAD,CAAb;AACD,GA/CgB;AAgDjBgB,EAAAA,QAhDiB,sBAgDN;AACT,QAAMhB,KAAK,GAAG,EAAd;AACA,SAAKK,IAAL,CAAU,UAACO,IAAD,EAAU;AAClBZ,MAAAA,KAAK,CAACe,IAAN,OAAAf,KAAK,qBAASY,IAAI,CAACI,QAAd,EAAL;AACD,KAFD,EAFS,CAKT;;AACA,WAAOrC,MAAM,CAACqB,KAAD,CAAb;AACD,GAvDgB;AAwDjBiB,EAAAA,QAxDiB,sBAwDN;AACT,QAAMjB,KAAK,GAAG,EAAd;AACA,SAAKK,IAAL,CAAU,UAACO,IAAD,EAAU;AAClBZ,MAAAA,KAAK,CAACe,IAAN,OAAAf,KAAK,qBAAShB,KAAK,CAACkB,IAAN,CAAWU,IAAI,CAACE,UAAL,CAAgBE,QAA3B,EACXE,MADW,CACJ,UAAAC,CAAC;AAAA,eAAIA,CAAC,KAAKP,IAAV;AAAA,OADG,CAAT,EAAL;AAED,KAHD;AAIA,WAAOjC,MAAM,CAACqB,KAAD,CAAb;AACD,GA/DgB;AAgEjBoB,EAAAA,IAhEiB,kBAgEV;AACL,QAAMpB,KAAK,GAAG,EAAd;AACA,SAAKK,IAAL,CAAU,UAACO,IAAD,EAAU;AAClB,UAAIS,QAAQ,GAAGT,IAAI,CAACU,WAApB;;AACA,aAAOD,QAAQ,IAAIA,QAAQ,CAACE,QAAT,KAAsB,CAAzC,EAA4C;AAC1CF,QAAAA,QAAQ,GAAGA,QAAQ,CAACC,WAApB;AACD;;AACDtB,MAAAA,KAAK,CAACe,IAAN,CAAWM,QAAX;AACD,KAND;AAOA,WAAO1C,MAAM,CAACqB,KAAD,CAAb;AACD,GA1EgB;AA2EjBwB,EAAAA,IA3EiB,kBA2EV;AACL,QAAMxB,KAAK,GAAG,EAAd;AACA,SAAKK,IAAL,CAAU,UAACO,IAAD,EAAU;AAClB,UAAIa,QAAQ,GAAGb,IAAI,CAACc,eAApB;;AACA,aAAOD,QAAQ,IAAIA,QAAQ,CAACF,QAAT,KAAsB,CAAzC,EAA4C;AAC1CE,QAAAA,QAAQ,GAAGA,QAAQ,CAACC,eAApB;AACD;;AACD1B,MAAAA,KAAK,CAACe,IAAN,CAAWU,QAAX;AACD,KAND;AAOA,WAAO9C,MAAM,CAACqB,KAAD,CAAb;AACD;AArFgB,CAAnB","file":"jquery.7a6e0748.js","sourceRoot":"..\\src","sourcesContent":["window.$ = window.jQuery = function (selectorOrArray) {\r\n  let elements = null\r\n  if (typeof selectorOrArray === 'string') {\r\n    elements = document.querySelectorAll(selectorOrArray)\r\n  } else if (selectorOrArray instanceof Array) {\r\n    elements = selectorOrArray\r\n  }\r\n\r\n  const api = Object.create(jQuery.prototype) // 创建一个对象，这个对象的__proto__为括号里的\r\n  // Object.assign方法就是把{}中的对象都赋值给api\r\n  // 相当于 api.elements = elements\r\n  Object.assign(api, {\r\n    elements: elements,\r\n    // 把oldThis 存在这个对象里。 要不然别的方法访问不到\r\n    // find中返回的是新的jQuery对象，而selectorOrArray是有oldThis这个属性的\r\n    oldThis: selectorOrArray.oldThis,\r\n\r\n  })\r\n\r\n  return api\r\n}\r\n// 把方法都移到jQuery原型身上，      这样每次创建一个jQuery对象时，就不会再去开一块内存存放方法了。\r\n//  所有创建的jQuery对象中的方法都放在原型上，这样省内存\r\njQuery.prototype = {\r\n  constructor: jQuery,\r\n  addClass(className) {\r\n    for (let i = 0; i < this.elements.length; i++) {\r\n      this.elements[i].classList.add(className)\r\n    }\r\n    // 要求返回this 的原因是因为能够链式操作\r\n    return this\r\n  },\r\n  find(selector) {\r\n    let array = []\r\n    for (let i = 0; i < this.elements.length; i++) {\r\n      const elements2 = Array.from(this.elements[i]\r\n        .querySelectorAll(selector))\r\n      array = array.concat(elements2)\r\n    }\r\n    //  将当前的对象存放在array里\r\n    array.oldThis = this\r\n    // 然后在返回一个新的jQuery对象， 防止污染\r\n    // 如果直接把数组赋值给elements返回的话，会污染到addClass方法\r\n    return jQuery(array)\r\n  },\r\n  end() {\r\n    return this.oldThis\r\n  },\r\n  each(fn) {\r\n    for (let i = 0; i < this.elements.length; i++) {\r\n      fn.call(null, this.elements[i], i)\r\n    }\r\n    // 要求返回this 的原因是因为能够链式操作\r\n    return this\r\n  },\r\n  print() {\r\n    console.log(this.elements);\r\n  },\r\n  parent() {\r\n    const array = []\r\n    // 遍历的原因是因为 同名元素有很多\r\n    this.each((node) => {\r\n      // 判断下如果是同一个父节点只打印一次就行\r\n      // 如果没有 node.parentNode 就push\r\n      if (array.indexOf(node.parentNode) === -1) {\r\n        array.push(node.parentNode)\r\n      }\r\n    })\r\n    // 返回一个新的jQuery对象， \r\n    return jQuery(array)\r\n  },\r\n  children() {\r\n    const array = []\r\n    this.each((node) => {\r\n      array.push(...node.children)\r\n    })\r\n    // 返回一个新的jQuery对象， \r\n    return jQuery(array)\r\n  },\r\n  siblings() {\r\n    const array = []\r\n    this.each((node) => {\r\n      array.push(...Array.from(node.parentNode.children)\r\n        .filter(n => n !== node))\r\n    })\r\n    return jQuery(array)\r\n  },\r\n  next() {\r\n    const array = []\r\n    this.each((node) => {\r\n      let nextNode = node.nextSibling\r\n      while (nextNode && nextNode.nodeType === 3) {\r\n        nextNode = nextNode.nextSibling\r\n      }\r\n      array.push(nextNode)\r\n    })\r\n    return jQuery(array)\r\n  },\r\n  prev() {\r\n    const array = []\r\n    this.each((node) => {\r\n      let prevNode = node.previousSibling\r\n      while (prevNode && prevNode.nodeType === 3) {\r\n        prevNode = prevNode.previousSibling\r\n      }\r\n      array.push(prevNode)\r\n    })\r\n    return jQuery(array)\r\n  },\r\n}"]}